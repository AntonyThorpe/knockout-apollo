"use strict";
var url = require("url");
var graphql_server_core_1 = require("graphql-server-core");
var GraphiQL = require("graphql-server-module-graphiql");
function graphqlExpress(options) {
    if (!options) {
        throw new Error('Apollo Server requires options.');
    }
    if (arguments.length > 1) {
        throw new Error("Apollo Server expects exactly one argument, got " + arguments.length);
    }
    return function (req, res) {
        graphql_server_core_1.runHttpQuery([req, res], {
            method: req.method,
            options: options,
            query: req.method === 'POST' ? req.body : req.query,
        }).then(function (gqlResponse) {
            res.setHeader('Content-Type', 'application/json');
            res.write(gqlResponse);
            res.end();
        }, function (error) {
            if ('HttpQueryError' !== error.name) {
                throw error;
            }
            if (error.headers) {
                Object.keys(error.headers).forEach(function (header) {
                    res.setHeader(header, error.headers[header]);
                });
            }
            res.statusCode = error.statusCode;
            res.write(error.message);
            res.end();
        });
    };
}
exports.graphqlExpress = graphqlExpress;
function graphiqlExpress(options) {
    return function (req, res) {
        var q = req.url && url.parse(req.url, true).query || {};
        var query = q.query || '';
        var operationName = q.operationName || '';
        var graphiQLString = GraphiQL.renderGraphiQL({
            endpointURL: options.endpointURL,
            query: query || options.query,
            variables: q.variables && JSON.parse(q.variables) || options.variables,
            operationName: operationName || options.operationName,
            passHeader: options.passHeader,
        });
        res.setHeader('Content-Type', 'text/html');
        res.write(graphiQLString);
        res.end();
    };
}
exports.graphiqlExpress = graphiqlExpress;
//# sourceMappingURL=expressApollo.js.map